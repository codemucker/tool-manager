#!/usr/bin/env bash
#
# Run python, auto installing it and setting up the env as required
#

set -Eeuo pipefail

source "$TM_BIN/.tm.boot.sh"
source "$TM_BIN/.tm.venv.sh"

runner_args=()
script_path=""
script_cmd_args=()

# Find the index of the script path.
# This assumes the script path is the first argument that exists as a file and is executable,
# and is not the runner itself ($0). This is a common and robust heuristic.
script_index=-1
for i in $( # Loop through 1-based argument indices
  seq 1 $#
); do
  arg="${!i}" # Get the argument value
  if [[ -f $arg && -x $arg && $arg != "$0" ]]; then
    script_index="$i"
    break
  fi
done

if [[ $script_index -eq -1 ]]; then
  _fail "Error: Could not determine the script path in env-tm-deno." >&2
fi

# Capture runner arguments (everything before the script path)
if [[ $((script_index - 1)) -ge 1 ]]; then
  for i in $(seq 1 $((script_index - 1))); do
    runner_args+=("${!i}")
  done
fi

# The script path itself
script_path="${!script_index}"
#script_path="$(_realpath "$script_path")"

_debug "Script Path: $script_path"

if [[ -z $script_path ]]; then
  _fail "Usage: env-tm-python <script_path> [args...]"
fi

if [[ ! -f $script_path ]]; then
  _fail "Error: Script not found at '$script_path'"
fi

# Capture arguments passed to the script on the command line (everything after the script path)
if [[ $((script_index + 1)) -le $# ]]; then
  script_cmd_args=("${@:$((script_index + 1))}")
fi

__tm::venv::run "python3" "$script_path" "$script_path" "${script_cmd_args[@]}"
