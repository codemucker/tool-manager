#!/usr/bin/env bash

#
# Run a shunit2 script in a tool-manager env. This will ensure the tool manager is initialised, and shunit2 is available.
#

source "$TM_HOME/.bashrc_script" || _fail "Failed to source TM_HOME/.bashrc_script"
source "$TM_BIN/.tm.venv.sh"

runner_args=()
script_path=""
script_cmd_args=()

# Find the index of the script path.
# This assumes the script path is the first argument that exists as a file and is executable.
script_index=-1
for i in $( # Loop through 1-based argument indices
  seq 1 $#
); do
  arg="${!i}" # Get the argument value
  if [[ -f $arg && -x $arg && $arg != "$0" ]]; then
    script_index="$i"
    break
  fi
done

if [[ $script_index -eq -1 ]]; then
  _fail "Error: Could not determine the test script path in env-tm-shunit2." >&2
fi

# Capture runner arguments (everything before the script path)
if [[ $((script_index - 1)) -ge 1 ]]; then
  for i in $(seq 1 $((script_index - 1))); do
    runner_args+=("${!i}")
  done
fi

# The script path itself
script_path="${!script_index}"

if [[ -z $script_path ]]; then
  _fail "ERROR: Usage: env-tm-shunit2 <test_script_path> [args...]"
fi

if [[ ! -f $script_path ]]; then
  _fail "ERROR: Script not found at '$script_path'"
fi

# Capture arguments passed to the script on the command line (everything after the script path)
if [[ $((script_index + 1)) -le $# ]]; then
  script_cmd_args=("${@:$((script_index + 1))}")
fi

# Setup shunit2 if not already installed
SHUNIT2_INSTALL_DIR="$TM_PACKAGES_DIR/shunit2"
SHUNIT2_SCRIPT="$SHUNIT2_INSTALL_DIR/shunit2"
if [ ! -f "$SHUNIT2_SCRIPT" ]; then
  _info "shunit2 not found. Downloading from web..."
  mkdir -p "$SHUNIT2_INSTALL_DIR"
  curl -sL "https://github.com/kward/shunit2/archive/refs/tags/v2.1.8.tar.gz" | tar -xz -C "$SHUNIT2_INSTALL_DIR" --strip-components=1 &>/dev/null
  _info "installed shunit2"
fi
export PATH="$SHUNIT2_INSTALL_DIR:$PATH"

# The test script is executed directly. It is expected to source shunit2 itself.
export TM_LOG_NAME="$(basename "$script_path")"
set -- "${script_cmd_args[@]}" # set the '$@' args for the test script
_info "running shunit2"
bash "$script_path" "${runner_args[@]}" "${script_cmd_args[@]}"
