#!/usr/bin/env tm-env-bash
#
# Purpose: Set a configuration option for the core Tool Manager.
# Args:
#   <config_key>: The configuration key to set.
#   [value]: The value to set for the configuration key. If not provided in an interactive shell, the script will prompt for it.
# Options:
#   --this: Auto-detect plugin name.
#   --tm: Use tool manager configuration.
#   --plugin <plugin_name>: The plugin to set the config for.
#   --key <config_key>: The key to set.
#   --value <value>: The value to set.
# Example: tm-cfg-set --key my_key --value my_value
# Example: tm-cfg-set --plugin my_plugin --key my_key --value my_value
#
# Set a configuration option for the core Tool Manager.
# Usage: tm-cfg-set <config_key> [value]
# If 'value' is not provided and the shell is interactive, prompts for the value.
#

_tm::source::include .tm.script.sh .tm.cfg.sh

declare -A args
# Using --opts-* to capture the command and its arguments after '--'
_parse_args \
    --file "${BASH_SOURCE[0]}" \
    --opt-this "|flag|group=plugin|desc=When set, auto detect plugin name" \
    --opt-tm "|flag|short=t|long=tm|group=plugin|desc=When set, use tool manager cfg" \
    --opt-plugin "|group=plugin|long=plugin|short=p|desc=The plugin to set the config for" \
    --opt-key "|short=k|required|long=key|desc=The key to set" \
    --opt-value "|remainder|long=value|short=v|desc=The value to set|required|" \
    --result args \
    -- "$@"

plugin_name="${args[plugin]}"
declare -A plugin=()
if [[ -n "$plugin_name" ]]; then
  _tm::parse::plugin_name plugin "$plugin_name"
elif [[ "${args[tm]}" ]]; then
    _tm::parse::plugin_id plugin "$__TM_PLUGIN_ID"
elif [[ "${args[this]}" ]]; then
    if [[ -z "${TM_PLUGIN_ID:-}" ]]; then
        _fail "Set flag '--this', but no env variable 'TM_PLUGIN_ID' has been set. Ensure you are calling this via the wrapper scripts"
    fi
    _tm::parse::plugin_id plugin "$TM_PLUGIN_ID"
else
    _tm::parse::plugin_id plugin "$__TM_PLUGIN_ID"
fi
value="${args['*']}"

_tm::cfg::set_value "${plugin[qname]}" "${args[key]}" "${args[value]}"
if [[ "$?" -ne "0" ]]; then
  _fail "Failed to set configuration value for key '${args[key]}' in plugin '${plugin[qname]}'."
fi
