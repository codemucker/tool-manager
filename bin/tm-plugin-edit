#!/usr/bin/env tm-env-bash
#
# Opens an editor in the specified plugin's installation directory,
# or in the Tool Manager's home directory if no plugin is specified.
# Usage: tm-plugin-edit [plugin_basename] [editor_command]
#   plugin_basename: The base directory name of the plugin in $TM_PLUGINS_INSTALL_DIR.
#                    This is typically the repository name used during cloning.
#   editor_command: Optional. The editor command to use (e.g., "vi", "nano", "code").
#                   Defaults to $EDITOR, then 'vi', then 'nano'.
#

_tm::source::include .tm.script.sh .tm.cfg.sh

# --- Argument Parsing ---
declare -A args
_parse_args \
    --file "${BASH_SOURCE[0]}" \
    --opt-tm "|flag|long=tm|short=t|desc=When set, edit tool-manager" \
    --opt-plugin "|remainder|short=p|value=PLUGIN-NAME|desc=The plugin to edit|example='some-plugin','tm-install'" \
    --opt-editor "|short=e|desc=The editor to use|multi" \
    --result args \
    -- "$@"

plugin_basename="${args[plugin]:-}"
editor_cmd="${args[editor]:-"$(_tm::cfg::get_editor)"}"

if [[ -z "$plugin_basename" ]] && [[ -n "${args[tm]}" ]] then
    plugin_basename="$__TM_NAME"
fi
if [[ "$plugin_basename" == "$__TM_NAME" ]] then
    _info "Opening editor in Tool Manager home: $TM_HOME"
    if ! cd "$TM_HOME"; then
      _fail "Could not cd to $TM_HOME"
    fi
    _info "using editor: $editor_cmd"
    "$editor_cmd" . # Open current directory
else
    plugin_dir="$TM_PLUGINS_INSTALL_DIR/$plugin_basename"
    if [[ ! -d "$plugin_dir" ]]; then
        _fail "Plugin directory '$plugin_dir' not found for plugin_basename '$plugin_basename'."
    else
        _info "Opening editor in plugin directory: $plugin_dir"
        if ! cd "$plugin_dir"; then
          _fail "Could not cd to $plugin_dir"
        fi
        if [[ "$editor_cmd" == 'bash' ]]; then
            "$editor_cmd"
        else
            "$editor_cmd" . # Open current directory
        fi
    fi
fi
