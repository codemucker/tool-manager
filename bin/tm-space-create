#!/usr/bin/env tm-env-bash
#
# Create a new space
#

_tm::source::include .tm.script.sh

declare -A args
_parse_args \
    --file "${BASH_SOURCE[0]}" \
    --help-tip \
    --opt-key "|remainder|short=k|value=NAME|desc=The space key (namespace, dot seperated, no spaces)" \
    --opt-guid "|short=g|value=GUID|desc=The space guid" \
    --opt-label "|short=l|value=LABEL|desc=The human friendly space label" \
    --opt-parent-key "|multi|short=pk|value=KEY|desc=The parent key" \
    --opt-parent-guid "|multi|short=pq|value=GUID|desc=The parent guid" \
    --opt-dir "|short=d|desc=The (custom) directory to save the space in, else the default is used" \
    --opt-clone "|flag|group=config|desc=If to clone config (default)" \
    --opt-inherit "|flag|group=config|desc=If to inherit config(changes in parent are reflected in child on restart)" \
    --opt-run "|short=r|desc=Where we run this|allowed=local,cloud|default=local" \
    --opt-isolation "|desc=How this space is isolated|allowed=native,chroot,docker,vm|default=native" \
    --result args \
    -- "$@"

_todo "implement me!"

_prompt_value(){
    local -n value_ref="$1"
    value_ref="$2"
    local prompt="$3"
    while [[ -z "$value_ref"  ]]; do
        _read "$prompt:" value_ref
    done
}

_prompt_value space_key "${args[key]:-}" "space key"
_prompt_value space_label "${args[label]:-}" "space label"


space_uuid="${args[guid]:-$(uuidgen)}"
space_file="$TM_SPACE_DIR/.space.${space_key}.ini"
# todo: look in space file for custom dir
space_dir="$TM_SPACE_DIR/${space_key}/"

if [[ -f "$space_file" ]]; then
    declare yn=''
    while [[ -z "$yn" ]]; do
        _read "space already exists ('$space_file'), delete existing? [yn]" yn
    done
    case "$yn" in 
        [Yy]*)
            rm -f "$space_file"
            rm -fR "$space_dir" || true         
            ;;
        *)    
            exit 1
            ;;        
    esac
fi
if [[ -d "$space_dir" ]]; then
    _fail  "space with this key already exists ('$space_dir'), aborting" 
fi

mkdir -p "$TM_SPACE_DIR"

# our definition of the space
echo "key=${space_key}" > "$space_file"
echo "guid=${space_uuid}" >> "$space_file"
echo "label=\"${space_label}\"" >> "$space_file"
echo "dir=\"$space_dir\"" >> "$space_file"
echo "active=false" >> "$space_file"

mkdir -p "$space_dir" 

# internal to the space (defaults)
space_ini="$space_dir/.space.ini"
echo "key=${space_key}" > "$space_ini"
echo "guid=${space_uuid}" >> "$space_ini"
echo "label=\"${space_label}\"" >> "$space_ini"